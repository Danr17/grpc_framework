# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import api_pb2 as api__pb2


class ProdServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetProds = channel.unary_unary(
        '/api.ProdService/GetProds',
        request_serializer=api__pb2.ClientRequest.SerializeToString,
        response_deserializer=api__pb2.ClientResponse.FromString,
        )


class ProdServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def GetProds(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ProdServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetProds': grpc.unary_unary_rpc_method_handler(
          servicer.GetProds,
          request_deserializer=api__pb2.ClientRequest.FromString,
          response_serializer=api__pb2.ClientResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'api.ProdService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class BackendServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.RetrieveItems = channel.unary_unary(
        '/api.BackendService/RetrieveItems',
        request_serializer=api__pb2.ApiRequest.SerializeToString,
        response_deserializer=api__pb2.ApiResponse.FromString,
        )


class BackendServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def RetrieveItems(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_BackendServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'RetrieveItems': grpc.unary_unary_rpc_method_handler(
          servicer.RetrieveItems,
          request_deserializer=api__pb2.ApiRequest.FromString,
          response_serializer=api__pb2.ApiResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'api.BackendService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
