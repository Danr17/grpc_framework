# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import api_pb2 as api__pb2


class ProdServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetVendorProdTypes = channel.unary_unary(
        '/api.ProdService/GetVendorProdTypes',
        request_serializer=api__pb2.ClientRequestType.SerializeToString,
        response_deserializer=api__pb2.ClientResponseType.FromString,
        )
    self.GetVendorProds = channel.unary_stream(
        '/api.ProdService/GetVendorProds',
        request_serializer=api__pb2.ClientRequestProds.SerializeToString,
        response_deserializer=api__pb2.ClientResponseProds.FromString,
        )


class ProdServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def GetVendorProdTypes(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetVendorProds(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ProdServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetVendorProdTypes': grpc.unary_unary_rpc_method_handler(
          servicer.GetVendorProdTypes,
          request_deserializer=api__pb2.ClientRequestType.FromString,
          response_serializer=api__pb2.ClientResponseType.SerializeToString,
      ),
      'GetVendorProds': grpc.unary_stream_rpc_method_handler(
          servicer.GetVendorProds,
          request_deserializer=api__pb2.ClientRequestProds.FromString,
          response_serializer=api__pb2.ClientResponseProds.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'api.ProdService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class StorageServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetProdsDetail = channel.unary_unary(
        '/api.StorageService/GetProdsDetail',
        request_serializer=api__pb2.StorageRequest.SerializeToString,
        response_deserializer=api__pb2.StorageResponse.FromString,
        )


class StorageServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def GetProdsDetail(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_StorageServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetProdsDetail': grpc.unary_unary_rpc_method_handler(
          servicer.GetProdsDetail,
          request_deserializer=api__pb2.StorageRequest.FromString,
          response_serializer=api__pb2.StorageResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'api.StorageService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
